{
    "page-index": {
        "prefix": "page-index",
        "description": "模版",
        "body": [
            "<template>",
            "  <div>",
            "   <page-header title=\"$1\" />",
            "   <page-body>",
            "     <list />",
            "   </page-body>",
            "  </div>",
            "</template>",
            "",
            "<script>",
            "import List from './components/List'",
            "",
            "export default {",
            "  name: '$2',",
            "  components: {",
            "    List,",
            "  },",
            "}",
            "</script>",
            ""
        ]
    },
    "page-list": {
        "prefix": "page-list",
        "description": "模版",
        "body": [
            "<template>",
            "  <page-list",
            "    :list=\"list\"",
            "    :columns=\"columns\"",
            "    :single-actions=\"singleActions\"",
            "    :group-actions=\"groupActions\" />",
            "</template>",
            "",
            "<script>",
            "import { getNameDescriptionTableColumn, getStatusTableColumn } from '@/utils/common/tableColumn'",
            "import WindowsMixin from '@/mixins/windows'",
            "",
            "export default {",
            "  name: '$3',",
            "  mixins: [WindowsMixin],",
            "  data () {",
            "    return {",
            "      list: this.$list.createList(this, {",
            "        resource: '$4',",
            "        getParams: {},",
            "        filterOptions: {",
            "          name: {",
            "            label: '名称',",
            "            filter: true,",
            "            formatter: val => {",
            "              return `name.contains(${val})`",
            "            },",
            "          },",
            "        },",
            "      }),",
            "      columns: [",
            "        getNameDescriptionTableColumn({",
            "          vm: this,",
            "          hideField: true,",
            "          addLock: true,",
            "          slotCallback: row => {",
            "            return (",
            "              <side-page-trigger onTrigger={ () => this.sidePageTriggerHandle(row.id, '$1') }>{ row.name }</side-page-trigger>",
            "            )",
            "          },",
            "        }),",
            "        getStatusTableColumn({ statusModule: '$2' }),",
            "      ],",
            "      groupActions: [",
            "         {",
            "           label: '新建',",
            "           action: () => {",
            "           this.createDialog('$5', {",
            "             title: '$6',",
            "             list: this.list,",
            "           })",
            "         },",
            "         meta: () => {",
            "           return {",
            "             buttonType: 'primary',",
            "           }",
            "         },",
            "        },",
            "      ],",
            "      singleActions: [",
            "        {",
            "          label: '删除',",
            "          action: (obj) => {",
            "            this.createDialog('DeleteResDialog', {",
            "              title: '删除',",
            "              data: [obj],",
            "              columns: this.columns,",
            "              list: this.list,",
            "            })",
            "          },",
            "        },",
            "      ],",
            "    }",
            "  },",
            "  created () {",
            "    this.initSidePageTab('detail')",
            "    this.list.fetchData()",
            "  },",
            "}",
            "</script>",
            ""
        ]
    },
    "base-dialog": {
        "prefix": "base-dialog",
        "description": "模版",
        "body": [
            "<template>",
            "  <base-dialog @cancel=\"cancelDialog\">",
            "    <div slot=\"header\">{{params.title}}</div>",
            "    <div slot=\"body\">$1</div>",
            "    <div slot=\"footer\">",
            "      <a-button type=\"primary\" @click=\"handleConfirm\" :loading=\"loading\">{{ $t('dialog.ok') }}</a-button>",
            "      <a-button @click=\"cancelDialog\">{{ $t('dialog.cancel') }}</a-button>",
            "    </div>",
            "  </base-dialog>",
            "</template>",
            "",
            "<script>",
            "import DialogMixin from '@/mixins/dialog'",
            "import WindowsMixin from '@/mixins/windows'",
            "import validateForm from '@/utils/validate'",
            "",
            "export default {",
            "  name: '$1',",
            "  mixins: [DialogMixin, WindowsMixin],",
            "  data () {",
            "    return {",
            "      loading: false",
            "    }",
            "  },",
            "  methods: {",
            "    async handleConfirm () {",
            "      this.loading = true",
            "      try {",
            "        const values = await this.validateForm()",
            "        this.cancelDialog()",
            "      } catch (error) {",
            "        throw error",
            "      } finally {",
            "        this.loading = true",
            "      }",
            "    },",
            "  },",
            "}",
            "</script>",
            ""
        ]
    },
    "detail": {
        "prefix": "detail",
        "description": "模版",
        "body": [
            "<template>",
            "  <detail",
            "    :list=\"list\"",
            "    :data=\"data\"",
            "    :base-info=\"baseInfo\"",
            "    statusModule=\"$1\" />",
            "</template>",
            "",
            "<script>",
            "export default {",
            "  name: '$2',",
            "  props: {",
            "    data: {",
            "        type: Object,",
            "        required: true,",
            "    },",
            "    list: {",
            "        type: Object,",
            "        required: true,",
            "    },",
            "  },",
            "  data () {",
            "    return {",
            "      baseInfo: [],",
            "    }",
            "  },",
            "}",
            "</script>",
            ""
        ]
    },
    "base-side-page": {
        "prefix": "base-side-page",
        "description": "模版",
        "body": [
            "<template>",
            "  <base-side-page",
            "    @cancel=\"cancelSidePage\"",
            "    title=\"$1\"",
            "    icon=\"$2\"",
            "    :res-name=\"data.name\"",
            "    :actions=\"params.actions\"",
            "    :current-tab=\"params.windowData.currentTab\"",
            "    :tabs=\"detailTabs\"",
            "    @tab-change=\"handleTabChange\">",
            "    <template v-slot:actions>",
            "      <actions :options=\"params.singleActions\" :row=\"data\" button-type=\"link\" button-size=\"small\" />",
            "    </template>",
            "    <component :is=\"params.windowData.currentTab\" :res-id=\"params.resId\" :data=\"data\" :list=\"params.list\" :getParams=\"getParams\" />",
            "  </base-side-page>",
            "</template>",
            "<script>",
            "import SidePageMixin from '@/mixins/sidePage'",
            "import WindowsMixin from '@/mixins/windows'",
            "import Actions from '@/components/PageList/Actions'",
            "",
            "export default {",
            "  name: '$3',",
            "  components: {",
            "    Actions,",
            "  },",
            "  mixins: [SidePageMixin, WindowsMixin],",
            "  data () {",
            "    return {",
            "      detailTabs: [",
            "        { label: '操作日志', key: 'event-drawer' },",
            "      ],",
            "    }",
            "  },",
            "  computed: {",
            "    getParams () {",
            "      return null",
            "    },",
            "    data () {",
            "      return this.params.list.data[this.params.resId].data",
            "    },",
            "  }  ,",
            "}",
            "</script>",
            ""
        ]
    }
}
